{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santi\\\\Documents\\\\CLASSES\\\\2022-2023\\\\SPRING_2023\\\\CS_35L\\\\Group_Project\\\\E-commerce_App\\\\EcommerceApp\\\\ecommerceapp\\\\client\\\\src\\\\pages\\\\Cart\\\\CartProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nfunction CartProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    // Retrieve cart items from local storage on component mount\n    const storedCartItems = localStorage.getItem(\"cartItems\");\n    if (storedCartItems) {\n      setCartItems(JSON.parse(storedCartItems));\n    }\n  }, []);\n  useEffect(() => {\n    // Save cart items to local storage whenever it changes\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }, [cartItems]);\n  const addToCart = item => {\n    setCartItems([...cartItems, item]);\n  };\n  const removeFromCart = itemId => {\n    const index = cartItems.findIndex(item => item.id === itemId);\n    if (index !== -1) {\n      const newCartItems = [...cartItems];\n      newCartItems.splice(index, 1);\n      setCartItems(newCartItems);\n    }\n  };\n  const clearCart = () => {\n    setCartItems([]);\n  };\n  const getCartSize = () => {\n    return cartItems.length;\n  };\n  const calculateTotalAmount = () => {\n    return cartItems.reduce((total, item) => total + item.price, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      getCartSize,\n      calculateTotalAmount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"jdONvkEabzLc64SbXgqXBHRMg9M=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","_ref","_s","children","cartItems","setCartItems","storedCartItems","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","item","removeFromCart","itemId","index","findIndex","id","newCartItems","splice","clearCart","getCartSize","length","calculateTotalAmount","reduce","total","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/santi/Documents/CLASSES/2022-2023/SPRING_2023/CS_35L/Group_Project/E-commerce_App/EcommerceApp/ecommerceapp/client/src/pages/Cart/CartProvider.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const CartContext = createContext();\n\nfunction CartProvider({ children }) {\n  const [cartItems, setCartItems] = useState([]);\n\n  useEffect(() => {\n    // Retrieve cart items from local storage on component mount\n    const storedCartItems = localStorage.getItem(\"cartItems\");\n    if (storedCartItems) {\n      setCartItems(JSON.parse(storedCartItems));\n    }\n  }, []);\n\n  useEffect(() => {\n    // Save cart items to local storage whenever it changes\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  const addToCart = (item) => {\n    setCartItems([...cartItems, item]);\n  };\n\n  const removeFromCart = (itemId) => {\n    const index = cartItems.findIndex((item) => item.id === itemId);\n    if (index !== -1) {\n      const newCartItems = [...cartItems];\n      newCartItems.splice(index, 1);\n      setCartItems(newCartItems);\n    }\n  };\n\n  const clearCart = () => {\n    setCartItems([]);\n  };\n\n  const getCartSize = () => {\n    return cartItems.length;\n  };\n\n  const calculateTotalAmount = () => {\n    return cartItems.reduce((total, item) => total + item.price, 0);\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        cartItems,\n        addToCart,\n        removeFromCart,\n        clearCart,\n        getCartSize,\n        calculateTotalAmount,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport default CartProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,SAASM,YAAYA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACzD,IAAIF,eAAe,EAAE;MACnBD,YAAY,CAACI,IAAI,CAACC,KAAK,CAACJ,eAAe,CAAC,CAAC;IAC3C;EACF,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACd;IACAW,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEF,IAAI,CAACG,SAAS,CAACR,SAAS,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMS,SAAS,GAAIC,IAAI,IAAK;IAC1BT,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEU,IAAI,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,cAAc,GAAIC,MAAM,IAAK;IACjC,MAAMC,KAAK,GAAGb,SAAS,CAACc,SAAS,CAAEJ,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKH,MAAM,CAAC;IAC/D,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,MAAMG,YAAY,GAAG,CAAC,GAAGhB,SAAS,CAAC;MACnCgB,YAAY,CAACC,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;MAC7BZ,YAAY,CAACe,YAAY,CAAC;IAC5B;EACF,CAAC;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBjB,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMkB,WAAW,GAAGA,CAAA,KAAM;IACxB,OAAOnB,SAAS,CAACoB,MAAM;EACzB,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,OAAOrB,SAAS,CAACsB,MAAM,CAAC,CAACC,KAAK,EAAEb,IAAI,KAAKa,KAAK,GAAGb,IAAI,CAACc,KAAK,EAAE,CAAC,CAAC;EACjE,CAAC;EAED,oBACE9B,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IACnBC,KAAK,EAAE;MACL1B,SAAS;MACTS,SAAS;MACTE,cAAc;MACdO,SAAS;MACTC,WAAW;MACXE;IACF,CAAE;IAAAtB,QAAA,EAEDA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAChC,EAAA,CAvDQF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAyDrB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}